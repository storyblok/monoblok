// Auto-generated SDK registry
// This file is generated by build.ts - do not edit manually

// Import all generated SDKs
import { Sdk as StoriesSdk } from './generated/stories/sdk.gen';
import { Sdk as SpacesSdk } from './generated/spaces/sdk.gen';
import { Sdk as PresetsSdk } from './generated/presets/sdk.gen';
import { Sdk as InternalTagsSdk } from './generated/internal_tags/sdk.gen';
import { Sdk as DatasourcesSdk } from './generated/datasources/sdk.gen';
import { Sdk as DatasourceEntriesSdk } from './generated/datasource_entries/sdk.gen';
import { Sdk as ComponentsSdk } from './generated/components/sdk.gen';
import { Sdk as ComponentFoldersSdk } from './generated/component_folders/sdk.gen';
import { Sdk as AssetsSdk } from './generated/assets/sdk.gen';

// Export all SDKs for grouped imports
export { StoriesSdk };
export { SpacesSdk };
export { PresetsSdk };
export { InternalTagsSdk };
export { DatasourcesSdk };
export { DatasourceEntriesSdk };
export { ComponentsSdk };
export { ComponentFoldersSdk };
export { AssetsSdk };

// Registry object for dynamic access
export const sdkRegistry = {
  'stories': StoriesSdk,
  'spaces': SpacesSdk,
  'presets': PresetsSdk,
  'internalTags': InternalTagsSdk,
  'datasources': DatasourcesSdk,
  'datasourceEntries': DatasourceEntriesSdk,
  'components': ComponentsSdk,
  'componentFolders': ComponentFoldersSdk,
  'assets': AssetsSdk,
} as const;

export type SdkRegistryInstance = {
  [K in keyof SdkRegistry]: InstanceType<SdkRegistry[K]>;
}

// Type for the registry
export type SdkRegistry = typeof sdkRegistry;

// Helper to get available SDK names
export const getAvailableSdks = () => Object.keys(sdkRegistry);
