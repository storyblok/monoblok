openapi: 3.1.1
info:
  title: Storyblok Content Delivery API - Stories
  version: 1.0.0
  description: |
    Content Delivery API for retrieving Storyblok stories.
    
    This API is read-only and designed for retrieving published content for your frontend applications.
    Use the **public** token for published content or the **preview** token for draft content.
servers:
  $ref: ../shared/servers.yaml
security:
  $ref: ../shared/security.yaml

paths:
  /stories:
    get:
      operationId: listStories
      summary: Retrieve Multiple Stories
      description: |
        Retrieve multiple stories from your Storyblok space.
        
        This endpoint supports various filtering, sorting, and pagination options.
        Use query parameters to customize the response based on your needs.
        
        ## Advanced Filtering
        
        For complex filtering operations, use the `filter_query` parameter with JSON syntax.
        See [Filter Queries Documentation](../filter-queries.md) for detailed examples and operations.
        
        ### Filter Query Examples:
        - `{"content.category": {"$is": "news"}}` - Filter by exact category
        - `{"content.tags": {"$any_in_array": ["featured"]}}` - Filter by tags
        - `{"content.publish_date": {"$gt_date": "2023-01-01"}}` - Filter by date range
      parameters:
        - $ref: ../shared/parameters.yaml#/version
        - $ref: ../shared/parameters.yaml#/cv
        - $ref: ../shared/parameters.yaml#/resolve_links
        - $ref: ../shared/parameters.yaml#/resolve_relations
        - $ref: ../shared/parameters.yaml#/language
        - $ref: ../shared/parameters.yaml#/fallback_lang
        - $ref: ../shared/parameters.yaml#/excluding_fields
        - $ref: ../shared/parameters.yaml#/by_slugs
        - $ref: ../shared/parameters.yaml#/by_uuids
        - $ref: ../shared/parameters.yaml#/by_ids
        - $ref: ../shared/parameters.yaml#/starts_with
        - $ref: ../shared/parameters.yaml#/with_tag
        - $ref: ../shared/parameters.yaml#/sort_by
        - $ref: ../shared/parameters.yaml#/search_term
        - $ref: ../shared/parameters.yaml#/filter_query
        - $ref: ../shared/parameters.yaml#/excluding_slugs
        - $ref: ../shared/parameters.yaml#/published_at_gt
        - $ref: ../shared/parameters.yaml#/published_at_lt
        - $ref: ../shared/parameters.yaml#/first_published_at_gt
        - $ref: ../shared/parameters.yaml#/first_published_at_lt
        - $ref: ../shared/parameters.yaml#/updated_at_gt
        - $ref: ../shared/parameters.yaml#/updated_at_lt
        - $ref: ../shared/parameters.yaml#/in_workflow_stages
        - $ref: ../shared/parameters.yaml#/content_type
        - $ref: ../shared/parameters.yaml#/level
        - name: page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
          description: Number of stories per page (max 100)
      responses:
        '200':
          $ref: ../shared/responses.yaml#/StoriesResponse
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '403':
          description: Forbidden - Token doesn't have access to this content
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '404':
          description: Not Found - No stories found matching the criteria
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
  
  /stories/{identifier}:
    get:
      operationId: getStory
      summary: Retrieve a Single Story
      description: |
        Retrieve a single story by its full_slug, id, or uuid.
        
        The identifier can be:
        - A full slug (e.g., `posts/my-third-post`)
        - A numeric ID (e.g., `440448565`)
        - A UUID (e.g., `e656e146-f4ed-44a2-8017-013e5a9d9395`) - requires `find_by=uuid` parameter
        
        Use query parameters to customize the response and resolve related content.
      parameters:
        - name: identifier
          in: path
          required: true
          schema:
            oneOf:
              - type: string
                description: Full slug of the story
              - type: integer
                description: Numeric ID of the story
          description: |
            The story identifier (full_slug, id, or uuid).
            Examples: `posts/my-third-post`, `440448565`, `e656e146-f4ed-44a2-8017-013e5a9d9395`
        - name: find_by
          in: query
          required: false
          schema:
            type: string
            enum: [uuid]
          description: |
            Required when querying by UUID instead of using the numeric ID.
            Set to `uuid` when the identifier parameter is a UUID.
        - $ref: ../shared/parameters.yaml#/version
        - $ref: ../shared/parameters.yaml#/cv
        - $ref: ../shared/parameters.yaml#/resolve_links
        - $ref: ../shared/parameters.yaml#/resolve_links_level
        - $ref: ../shared/parameters.yaml#/resolve_relations
        - $ref: ../shared/parameters.yaml#/language
        - $ref: ../shared/parameters.yaml#/fallback_lang
        - $ref: ../shared/parameters.yaml#/excluding_fields
        - name: from_release
          in: query
          required: false
          schema:
            type: string
          description: |
            Used to access a story version associated with a specific release by providing the release ID
        - name: resolve_assets
          in: query
          required: false
          schema:
            type: integer
          description: |
            Used to resolve asset metadata, including custom metadata. 
            The resolved metadata is included in the `assets` property of the response.
            This parameter is only available in higher-tier plans.
        - name: resolve_level
          in: query
          required: false
          schema:
            type: integer
            enum: [2]
          description: |
            Used to force resolve second-level relations when the first level reaches a limit of 100 relations.
            While resolving relations, if the first level exceeds 100 relations, the API, by default, stops looking for the second level.
            With the parameter `resolve_level=2`, second-level relations can be resolved even when the limit of first-level relations is reached.
      responses:
        '200':
          $ref: ../shared/responses.yaml#/StoryResponse
        '401':
          description: Unauthorized - Invalid or missing token
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '403':
          description: Forbidden - Token doesn't have access to this content
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '404':
          description: Not Found - Story not found
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
        '429':
          description: Too Many Requests - Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: ../shared/responses.yaml#/ErrorResponse
components: 
  securitySchemes:
    $ref: ../shared/security-schemes.yaml#/securitySchemes
