openapi: 3.1.1
info:
  title: Storyblok Components API
  version: 1.0.0
  description: API for managing Storyblok components
servers:
  $ref: ../../shared/servers.yaml
security:
  $ref: ../../shared/security.yaml
paths:
  /v1/spaces/{space_id}/components:
    description: A component is a standalone entity that is meaningful in its own right. While components (or bloks) can be nested in each other, semantically they remain equal. Each component is a small piece of your data structure which can be filled with content. One component can consist of as many field types as required. The components endpoint allows you to retrieve, add, update, or delete components.
    get:
      operationId: getComponents
      summary: Retrieve Multiple Components
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: token
          in: query
          required: false
          schema:
            type: string
          description: The management token for authentication
        - name: cv
          in: query
          required: false
          schema:
            type: integer
          description: Cache version for cache busting
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
          description: Number of components per page
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Page number
        - name: by_component_group
          in: query
          required: false
          schema:
            type: string
          description: Filter by component group UUID
        - name: by_name
          in: query
          required: false
          schema:
            type: string
          description: Filter by component name
        - name: by_root
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by root components only
        - name: by_nestable
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by nestable components only
      responses:
        '200':
          description: List of components
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      $ref: '#/components/schemas/Component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
    post:
      operationId: createComponent
      summary: Create a Component
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
      responses:
        '201':
          description: Component created
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/Component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
  /v1/spaces/{space_id}/components/{component_id}:
    description: Manage a specific component by its ID. Retrieve, update, or delete individual components and their configurations.
    get:
      operationId: getComponent
      summary: Retrieve One Component
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: component_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the component.
        - name: token
          in: query
          required: false
          schema:
            type: string
          description: The management token for authentication
        - name: cv
          in: query
          required: false
          schema:
            type: integer
          description: Cache version for cache busting
      responses:
        '200':
          description: Component details
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/Component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
    put:
      operationId: updateComponent
      summary: Update a Component
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: component_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the component.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Component'
      responses:
        '200':
          description: Component updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/Component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
    delete:
      operationId: deleteComponent
      summary: Delete a Component
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: component_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the component.
      responses:
        '204':
          description: Component deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
  /v1/spaces/{space_id}/components/versions:
    description: Retrieve component versions
    get:
      operationId: getComponentVersions
      summary: Retrieve Component Versions
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          schema:
            type: integer
            default: 25
            maximum: 100
        - name: page
          in: query
          schema:
            type: integer
            default: 1
        - name: model
          in: query
          schema: 
            type: string
        - name: model_id
          in: query
          schema: 
            type: string

      responses:
        '200':
          description: Component versions
          content:
            application/json:
              schema: 
                type: object
                properties: 
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        event:
                          type: string
                        created_at:
                          type: string
                        author_id:
                          type: integer
                        item_id:
                          type: integer
                        author:
                          type: string
                        is_draft:
                          type: boolean
                
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
  /v1/spaces/{space_id}/components/{component_id}/versions/{version_id}:
    description: Retrieve a specific version of a component by version ID.
    get:
      operationId: getComponentVersion
      summary: Retrieve a Single Component Version
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: component_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the component.
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the version.
      responses:
        '200':
          description: Component version details
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_version:
                    type: object
                    properties:
                      schema:
                        type: object
                        additionalProperties: true
            
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component or version not found
    put:
      operationId: restoreComponentVersion
      summary: Restore a Component Version
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the version to restore.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                model_id:
                  type: string
      responses:
        '200':
          description: Component version restored
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/Component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component or version not found
components:
  securitySchemes:
    $ref: ../../shared/security-schemes.yaml#/securitySchemes
  schemas:
    Component:
      $ref: component.yaml
      type: object
      description: Request body for creating or updating a component
      properties:
        component:
          type: object
          description: Component configuration
          properties:
            name:
              type: string
              description: Technical name of the component
            display_name:
              type: string
              description: Human-readable display name
            schema:
              type: object
              description: Component schema definition
              properties:
                _uid:
                  type: object
                  description: Unique identifier field configuration
                component:
                  type: object
                  description: Component type field configuration
                [field_name]:
                  type: object
                  description: Dynamic field configurations
            is_root:
              type: boolean
              description: Whether the component can be used as a root component
            is_nestable:
              type: boolean
              description: Whether the component can be nested within other components
            image:
              type: object
              description: Component image/icon
              properties:
                id:
                  type: integer
                  description: Image ID
                alt:
                  type: string
                  description: Image alt text
                name:
                  type: string
                  description: Image name
                focus:
                  type: string
                  description: Image focus point
                title:
                  type: string
                  description: Image title
                filename:
                  type: string
                  description: Image filename
                copyright:
                  type: string
                  description: Image copyright
                fieldtype:
                  type: string
                  description: Image field type
            preview_tmpl:
              type: string
              description: Preview template for the component
            is_sortable:
              type: boolean
              description: Whether the component is sortable
            initial_status:
              type: string
              description: Initial status of the component
            expandable:
              type: boolean
              description: Whether the component is expandable
            color:
              type: string
              description: Component color
            icon:
              type: string
              description: Component icon
            strict:
              type: boolean
              description: Whether the component has strict validation
            tabs:
              type: array
              description: Component tabs configuration
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Tab name
                  label:
                    type: string
                    description: Tab label
                  hidden:
                    type: boolean
                    description: Whether the tab is hidden
            can_edit:
              type: boolean
              description: Whether the component can be edited
            default_root:
              type: string
              description: Default root component name
            default_content:
              type: object
              description: Default content for the component
    ComponentVersion:
      type: object
      description: A component version object
      properties:
        schema:
          additionalProperties: true
    ComponentSchemaField:
      type: object
      description: A component schema field object
      properties:
        type:
          type: string
          description: Field type (text, textarea, number, boolean, etc.)
        pos:
          type: integer
          description: Position of the field
        display_name:
          type: string
          description: Human-readable display name
        required:
          type: boolean
          description: Whether the field is required
        regex:
          type: string
          description: Regular expression for validation
        translatable:
          type: boolean
          description: Whether the field is translatable
        description:
          type: string
          description: Field description
        default_value:
          type: string
          description: Default value for the field
        options:
          type: array
          description: Array of datasource entries [{name:"", value:""}]; Effects editor only if source=undefined. For field type option.
          items:
            type: object
            properties:
              _uid:
                type: string
              name:
                type: string
              value:
                type: string
              
        source:
          type: string
          enum: [option, options, custom]
        folder_slug:
          type: string
          description: Folder slug for asset fields
        filetypes:
          type: array
          description: Allowed file types for asset fields
          items:
            type: string
        maximum:
          type: number
          description: Maximum value for number fields
        minimum:
          type: number
          description: Minimum value for number fields
        maxlength:
          type: integer
          description: Maximum length for text fields
        minlength:
          type: integer
          description: Minimum length for text fields
        rich_markdown:
          type: boolean
          description: Whether rich markdown is enabled
        rich_text:
          type: boolean
          description: Whether rich text is enabled
        markdown:
          type: boolean
          description: Whether markdown is enabled
        size:
          type: string
          description: Field size (small, medium, large)
        height:
          type: integer
          description: Field height in pixels
        width:
          type: integer
          description: Field width in pixels
        use_uuid:
          type: boolean
          description: Whether to use UUID for the field
        restrict_content_types:
          type: boolean
          description: Whether to restrict content types
        restrict_components:
          type: boolean
          description: Whether to restrict components
        component_whitelist:
          type: array
          description: List of allowed components
          items:
            type: string
        component_group_whitelist:
          type: array
          description: List of allowed component groups
          items:
            type: string
        maximum_entries:
          type: integer
          description: Maximum number of entries
        minimum_entries:
          type: integer
          description: Minimum number of entries
        restrict_assets:
          type: boolean
          description: Whether to restrict assets
        asset_whitelist:
          type: array
          description: List of allowed asset types
          items:
            type: string
        exclude_empty_option:
          type: boolean
          description: Whether to exclude empty option
        include_empty_option:
          type: boolean
          description: Whether to include empty option
        datasource_slug:
          type: string
          description: Datasource slug for datasource fields
        multiple:
          type: boolean
          description: Whether multiple values are allowed
        custom_css:
          type: string
          description: Custom CSS for the field
        custom_js:
          type: string
          description: Custom JavaScript for the field
        api_connection:
          type: object
          description: API connection configuration
          properties:
            url:
              type: string
              description: API URL
            headers:
              type: object
              description: API headers
            params:
              type: object
              description: API parameters
        fieldset:
          type: object
          description: Fieldset configuration
          properties:
            title:
              type: string
              description: Fieldset title
            description:
              type: string
              description: Fieldset description
            collapsible:
              type: boolean
              description: Whether the fieldset is collapsible
            collapsed:
              type: boolean
              description: Whether the fieldset is collapsed by default
