openapi: 3.1.1
info:
  title: Storyblok Stories API
  version: 1.0.0
  description: API for managing Storyblok stories
servers:
  $ref: ../../shared/servers.yaml
security:
  $ref: ../../shared/security.yaml
paths:
  /v1/spaces/{space_id}/stories:
    get:
      operationId: getStories
      summary: Retrieve Multiple Stories
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric ID of a space
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Current page of stories
        - name: contain_component
          in: query
          required: false
          schema:
            type: string
          description: Filters by component in all levels of the content. Allows comma separated value for multiple components
        - name: text_search
          in: query
          required: false
          schema:
            type: string
          description: Filter by a term using full text search
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
          description: Sort entries by specific attribute and order with content.YOUR_FIELD:asc and content.YOUR_FIELD:desc. To sort integers append :int. To sort floats append :float. Possible values are all root attributes of the entry (_position_ and _parent_position_ are special invisible attributes) and all fields of your content type inside content with a dot as seperator. 
        - name: pinned
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by pinned stories if '1'
        - name: excluding_ids
          in: query
          required: false
          schema:
            type: string
          description: Exclude specific stories by providing their IDs as a comma-separated string.
        - name: by_ids
          in: query
          required: false
          schema:
            type: string
          description: Filter by ids (comma separated)
        - name: by_uuids
          in: query
          required: false
          schema:
            type: string
          description: Retrieve specific stories by providing their UUIDs as a comma-separated string.
        - name: with_tag
          in: query
          required: false
          schema:
            type: string
          description: Filter by specific tag(s). Multiple tags can be provided as a comma-separated string (treated like an OR operator).
        - name: folder_only
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by folders only
        - name: story_only
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by stories only
        - name: with_parent
          in: query
          required: false
          schema:
            type: integer
          description: Filter by parent id
        - name: starts_with
          in: query
          required: false
          schema:
            type: string
          description: Filter stories starting with a specific slug
        - name: in_trash
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by items in the trash folder
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Filter by search term
        - name: filter_query
          in: query
          required: false
          schema:
            type: string
          description: Filter by specific attribute(s) of your content type. See Content Delivery API Documentation.
        - name: in_release
          in: query
          required: false
          schema:
            type: integer
          description: Filter items by the release id
        - name: is_published
          in: query
          required: false
          schema:
            type: boolean
          description: true for entries that are currently published; false for those that are currently not published or unpublished
        - name: by_slugs
          in: query
          required: false
          schema:
            type: string
          description: Retrieve stories by comma-separated full_slug. It is possible to specify wildcards by using *.
        - name: mine
          in: query
          required: false
          schema:
            type: boolean
          description: Filters all the stories assigned to the current user whose token is being used
        - name: excluding_slugs
          in: query
          required: false
          schema:
            type: string
          description: Exclude stories by specifying comma-separated values of full_slug. It is possible to specify wildcards by using *.
        - name: in_workflow_stages
          in: query
          required: false
          schema:
            type: string
          description: Retrieve stories that are in a particular workflow stage by providing a comma-separated list of workflow stage IDs. Workflow stage IDs can be retrieved via the Management API.
        - name: by_uuids_ordered
          in: query
          required: false
          schema:
            type: string
          description: Retrieve specific stories by providing their UUIDs as a comma-separated string. The order of the stories in the response matches the order in which the UUIDs are listed.
        - name: with_slug
          in: query
          required: false
          schema:
            type: string
          description: Filter by exact slug. Make sure to use the full slug.
        - name: with_summary
          in: query
          required: false
          schema:
            type: integer
          description: If added, returns content_summary object with relevant information.
        - name: scheduled_at_gt
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter stories that are scheduled after the provided date
        - name: scheduled_at_lt
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter stories that are scheduled before the provided date
        - name: favourite
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by your favourites.
        - name: reference_search
          in: query
          required: false
          schema:
            type: string
          description: Filter by references. Can be used for texts (partial search supported) and other references like assets. Example - stories with specific asset. For stories with a specific asset, complete URL of an asset is recommended for specific results. Names are also valid but will include the results found with content search as well.
      responses:
        '200':
          description: List of stories
          content:
            application/json:
              schema:
                type: object
                properties:
                  stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
    post:
      operationId: createStory
      summary: Create a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryCreateRequest'
      responses:
        '201':
          description: Story created
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
  /v1/spaces/{space_id}/stories/{story_id}:
    get:
      operationId: getStory
      summary: Retrieve One Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric ID of a space
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric id of story
        - name: version
          in: query
          required: false
          schema:
            type: string
            enum: [published, draft]
          description: The version to retrieve (published or draft)
        - name: cv
          in: query
          required: false
          schema:
            type: integer
          description: Cache version for cache busting
        - name: excluding_fields
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of fields to exclude
        - name: language
          in: query
          required: false
          schema:
            type: string
          description: Language code for internationalization
        - name: fallback_lang
          in: query
          required: false
          schema:
            type: string
          description: Fallback language code
        - name: resolve_links
          in: query
          required: false
          schema:
            type: string
            enum: [story, url, 0, 1]
          description: How to resolve links
        - name: resolve_relations
          in: query
          required: false
          schema:
            type: string
          description: Comma-separated list of relation fields to resolve
        - name: from_release
          in: query
          required: false
          schema:
            type: integer
          description: Get story from a specific release
        - name: resolve_assets
          in: query
          required: false
          schema:
            type: integer
          description: Resolve assets (0 or 1)
        - name: resolve_rich_text
          in: query
          required: false
          schema:
            type: integer
          description: Resolve rich text (0 or 1)
        - name: resolve_assets
          in: query
          required: false
          schema:
            type: integer
          description: Resolve assets (0 or 1)
        - name: resolve_rich_text
          in: query
          required: false
          schema:
            type: integer
          description: Resolve rich text (0 or 1)
      responses:
        '200':
          description: Story details
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
    put:
      operationId: updateStory
      summary: Update a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryUpdateRequest'
      responses:
        '200':
          description: Story updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
    delete:
      operationId: deleteStory
      summary: Delete a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story.
      responses:
        '204':
          description: Story deleted
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/duplicate:
    post:
      operationId: duplicateStory
      summary: Duplicate a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story to duplicate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryDuplicateRequest'
      responses:
        '201':
          description: Story duplicated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/publish:
    post:
      operationId: publishStory
      summary: Publish a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story to publish.
        - name: release_id
          in: query
          required: false
          schema:
            type: integer
          description: The ID of the release to publish to.
        - name: publish_unpublished_links
          in: query
          required: false
          schema:
            type: boolean
          description: Whether to publish unpublished links.
      responses:
        '200':
          description: Story published
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/unpublish:
    post:
      operationId: unpublishStory
      summary: Unpublish a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story to unpublish.
      responses:
        '200':
          description: Story unpublished
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/export:
    get:
      operationId: exportStory
      summary: Export a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story to export.
        - name: version
          in: query
          required: false
          schema:
            type: string
          description: The version to export (published or draft).
      responses:
        '200':
          description: Story exported
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/import:
    post:
      operationId: importStory
      summary: Import a Story
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryImportRequest'
      responses:
        '201':
          description: Story imported
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
  /v1/spaces/{space_id}/stories/{story_id}/translate:
    post:
      operationId: translateStory
      summary: Translate a Story by AI
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story to translate.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryTranslateRequest'
      responses:
        '200':
          description: Story translated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/versions:
    get:
      operationId: getStoryVersions
      summary: Get Story Versions
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story.
      responses:
        '200':
          description: Story versions
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      $ref: '#/components/schemas/StoryVersion'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/{story_id}/versions/{version_id}/restore:
    post:
      operationId: restoreStoryVersion
      summary: Restore a Story Version
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story.
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the version to restore.
      responses:
        '200':
          description: Story version restored
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/Story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story or version not found
  /v1/spaces/{space_id}/stories/{story_id}/versions/compare:
    get:
      operationId: compareStoryVersions
      summary: Compare Story Versions
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the Storyblok space.
        - name: story_id
          in: path
          required: true
          schema:
            type: integer
          description: The ID of the story.
        - name: from_version
          in: query
          required: true
          schema:
            type: integer
          description: The ID of the source version.
        - name: to_version
          in: query
          required: true
          schema:
            type: integer
          description: The ID of the target version.
      responses:
        '200':
          description: Version comparison
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryVersionComparison'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
  /v1/spaces/{space_id}/stories/unpublished_dependencies:
    post:
      operationId: getUnpublishedDependencies
      summary: Get Unpublished Dependencies
      parameters:
        - name: space_id
          in: path
          required: true
          schema:
            type: integer
          description: Numeric ID of a space
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_ids
              properties:
                story_ids:
                  type: array
                  items:
                    type: integer
                  description: List of story IDs
                release_id:
                  type: integer
                  description: ID of a release. If this is passed, the endpoint looks for unpublished dependencies in this specific release.
      responses:
        '200':
          description: Unpublished dependencies
          content:
            application/json:
              schema:
                type: object
                properties:
                  unpublished_stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/UnpublishedStory'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
components:
  securitySchemes:
    $ref: ../../shared/security-schemes.yaml#/securitySchemes
  schemas:
    Story:
      $ref: ./story.yaml
    StoryCreateRequest:
      type: object
      required:
        - story
      properties:
        story:
          required: 
            - name
            - slug
          allOf:
            - $ref: "#/components/schemas/Story"
            - type: object
        publish:
          type: integer
          description: Should the story be published immediately (set 1 to publish)
        release_id:
          type: integer
          description: ID of the current release (can be requested with the from_release API parameter)
    StoryUpdateRequest:
      type: object
      properties:
        story:
          $ref: "#/components/schemas/Story"
          
        group_id:
          type: string
        force_update:
          type: string
          enum: [0, 1]
          default: 0
        release_id:
          type: integer
          description: ID of the current release (can be requested with the from_release API parameter)
        publish:
          type: integer
          description: Should the story be published immediately (set 1 to publish) 
        lang:
          type: string
          description: Language code to publish the story individually (must be enabled in the space settings)
    StoryDuplicateRequest:
      type: object
      description: Request body for duplicating a story
      properties:
        story:
          type: object
          properties:
            name:
              type: string
              description: Name for the duplicated story
            slug:
              type: string
              description: Slug for the duplicated story
            parent_id:
              type: integer
              description: Parent folder ID for the duplicated story
    StoryImportRequest:
      type: object
      description: Request body for importing a story
      properties:
        story:
          type: object
          description: The story object to import
          properties:
            name:
              type: string
              description: Name of the story
            slug:
              type: string
              description: Slug of the story
            content:
              type: object
              description: Content of the story
            parent_id:
              type: integer
              description: Parent folder ID
        publish:
          type: boolean
          description: Whether to publish the imported story
    StoryTranslateRequest:
      type: object
      description: Request body for AI translation
      properties:
        target_language:
          type: string
          description: Target language code for translation
        fields:
          type: array
          description: Array of field names to translate
          items:
            type: string
    StoryVersion:
      type: object
      description: A story version object
      properties:
        id:
          type: integer
          description: Version ID
        name:
          type: string
          description: Version name
        created_at:
          type: string
          format: date-time
          description: Version creation date
        created_by:
          type: object
          description: User who created the version
          properties:
            id:
              type: integer
              description: User ID
            name:
              type: string
              description: User name
        story:
          $ref: '#/components/schemas/Story'
    StoryVersionComparison:
      type: object
      description: Comparison between two story versions
      properties:
        from_version:
          type: integer
          description: Source version ID
        to_version:
          type: integer
          description: Target version ID
        changes:
          type: object
          description: Changes between versions
          properties:
            added:
              type: array
              description: Added fields
              items:
                type: string
            removed:
              type: array
              description: Removed fields
              items:
                type: string
            modified:
              type: array
              description: Modified fields
              items:
                type: string
    UnpublishedStory:
      type: object
      description: An unpublished story object
      properties:
        id:
          type: integer
          description: Numeric id of the story
        name:
          type: string
          description: The complete name provided for the story
        parent_id:
          type: integer
          description: ID of the parent folder
        updated_at:
          type: string
          format: date-time
          description: Latest update date
        published_at:
          type: string
          format: date-time
          description: Latest publishing date
        published:
          type: boolean
          description: true if a story is currently published, even if it has unpublished changes
        slug:
          type: string
          description: The slug specific for the story
        path:
          type: string
          description: Value of the real path defined in the story's entry configuration (usually, this value is only required for Storyblok's Visual Editor)
        full_slug:
          type: string
          description: The full slug of the story, combining the parent folder(s) and the designated story slug
        unpublished_changes:
          type: boolean
          description: Story has unpublished changes; saved but not published
