openapi: 3.1.1
info:
  title: Storyblok Stories API
  version: 1.0.0
  description: API for managing Storyblok stories
servers:
  - url: https://mapi.storyblok.com
    description: Base URL for spaces created in the EU
  - url: https://api-us.storyblok.com
    description: Base URL for spaces created in the US
  - url: https://api-ca.storyblok.com
    description: Base URL for spaces created in the Canada
  - url: https://api-ap.storyblok.com
    description: Base URL for spaces created in the Australia
  - url: https://app.storyblok.cn
    description: Base URL for spaces created in the China
tags:
  - name: stories_other
    x-displayName: other
  - name: components_other
    x-displayName: other
paths:
  /v1/spaces/{space_id}/stories:
    get:
      operationId: getStories
      summary: Retrieve Multiple Stories
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: page
          in: query
          required: false
          schema:
            type: integer
          description: Current page of stories
        - name: contain_component
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filters by component in all levels of the content. Allows comma
            separated value for multiple components
        - name: text_search
          in: query
          required: false
          schema:
            type: string
          description: Filter by a term using full text search
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
          description: >-
            Sort entries by specific attribute and order with
            content.YOUR_FIELD:asc and content.YOUR_FIELD:desc. To sort integers
            append :int. To sort floats append :float. Possible values are all
            root attributes of the entry (_position_ and _parent_position_ are
            special invisible attributes) and all fields of your content type
            inside content with a dot as seperator.
        - name: pinned
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by pinned stories if '1'
        - name: excluding_ids
          in: query
          required: false
          schema:
            type: string
          description: >-
            Exclude specific stories by providing their IDs as a comma-separated
            string.
        - name: by_ids
          in: query
          required: false
          schema:
            type: string
          description: Filter by ids (comma separated)
        - name: by_uuids
          in: query
          required: false
          schema:
            type: string
          description: >-
            Retrieve specific stories by providing their UUIDs as a
            comma-separated string.
        - name: with_tag
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filter by specific tag(s). Multiple tags can be provided as a
            comma-separated string (treated like an OR operator).
        - name: folder_only
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by folders only
        - name: story_only
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by stories only
        - name: with_parent
          in: query
          required: false
          schema:
            type: integer
          description: Filter by parent id
        - name: starts_with
          in: query
          required: false
          schema:
            type: string
          description: Filter stories starting with a specific slug
        - name: in_trash
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by items in the trash folder
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Filter by search term
        - name: filter_query
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filter by specific attribute(s) of your content type. See Content
            Delivery API Documentation.
        - name: in_release
          in: query
          required: false
          schema:
            type: integer
          description: Filter items by the release id
        - name: is_published
          in: query
          required: false
          schema:
            type: boolean
          description: >-
            true for entries that are currently published; false for those that
            are currently not published or unpublished
        - name: by_slugs
          in: query
          required: false
          schema:
            type: string
          description: >-
            Retrieve stories by comma-separated full_slug. It is possible to
            specify wildcards by using *.
        - name: mine
          in: query
          required: false
          schema:
            type: boolean
          description: >-
            Filters all the stories assigned to the current user whose token is
            being used
        - name: excluding_slugs
          in: query
          required: false
          schema:
            type: string
          description: >-
            Exclude stories by specifying comma-separated values of full_slug.
            It is possible to specify wildcards by using *.
        - name: in_workflow_stages
          in: query
          required: false
          schema:
            type: string
          description: >-
            Retrieve stories that are in a particular workflow stage by
            providing a comma-separated list of workflow stage IDs. Workflow
            stage IDs can be retrieved via the Management API.
        - name: by_uuids_ordered
          in: query
          required: false
          schema:
            type: string
          description: >-
            Retrieve specific stories by providing their UUIDs as a
            comma-separated string. The order of the stories in the response
            matches the order in which the UUIDs are listed.
        - name: with_slug
          in: query
          required: false
          schema:
            type: string
          description: Filter by exact slug. Make sure to use the full slug.
        - name: with_summary
          in: query
          required: false
          schema:
            type: integer
          description: If added, returns content_summary object with relevant information.
        - name: scheduled_at_gt
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter stories that are scheduled after the provided date
        - name: scheduled_at_lt
          in: query
          required: false
          schema:
            type: string
            format: date-time
          description: Filter stories that are scheduled before the provided date
        - name: favourite
          in: query
          required: false
          schema:
            type: boolean
          description: Filter by your favourites.
        - name: reference_search
          in: query
          required: false
          schema:
            type: string
          description: >-
            Filter by references. Can be used for texts (partial search
            supported) and other references like assets. Example - stories with
            specific asset. For stories with a specific asset, complete URL of
            an asset is recommended for specific results. Names are also valid
            but will include the results found with content search as well.
      responses:
        '200':
          description: List of stories
          content:
            application/json:
              schema:
                type: object
                properties:
                  stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    post:
      operationId: createStory
      summary: Create a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/story-create-request'
      responses:
        '201':
          description: Story created
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}:
    get:
      operationId: getStory
      summary: Retrieve One Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
      responses:
        '200':
          description: Story details
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    put:
      operationId: updateStory
      summary: Update a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/story-update-request'
      responses:
        '200':
          description: Story updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    delete:
      operationId: deleteStory
      summary: Delete a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
      responses:
        '200':
          description: Story deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/duplicate:
    put:
      operationId: duplicateStory
      summary: Duplicate a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoryDuplicateRequest'
      responses:
        '200':
          description: Story duplicated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/publish:
    get:
      operationId: publishStory
      summary: Publish a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: lang
          in: query
          required: false
          schema:
            type: string
          description: Accept a list of languages codes separated by a comma
      responses:
        '200':
          description: Story published
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/unpublish:
    get:
      operationId: unpublishStory
      summary: Unpublish a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: lang
          in: query
          required: false
          schema:
            type: string
          description: Accept a list of languages codes separated by a comma
      responses:
        '200':
          description: Story unpublished
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/export.json:
    get:
      operationId: exportStory
      summary: Export a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: version
          in: query
          required: false
          schema:
            type: string
            enum:
              - '1'
              - '2'
            default: '1'
        - name: lang_code
          in: query
          required: false
          schema:
            type: string
          description: The language code for which the export should happen
        - name: export_lang
          in: query
          required: false
          schema:
            type: boolean
          description: If the values of the lang_code should be exported or not
      responses:
        '200':
          description: Story exported
          content:
            application/json:
              schema:
                type: object
                description: Export data with field keys and values
                additionalProperties: true
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/import.json:
    put:
      operationId: importStory
      summary: Import a Story
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: version
          in: query
          required: false
          schema:
            type: string
            enum:
              - '1'
              - '2'
            default: '1'
        - name: lang_code
          in: query
          required: false
          schema:
            type: string
          description: A language code
        - name: import_lang
          in: query
          required: false
          schema:
            type: boolean
          description: It shows to import language code or not
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story
              properties:
                story:
                  allOf:
                    - $ref: '#/components/schemas/story'
                    - type: object
                      required:
                        - name
                        - slug
                      description: A single story object to import
      responses:
        '200':
          description: Story imported
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/ai_translate:
    put:
      operationId: translateStory
      summary: Translate a Story by AI
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - lang
                - code
              properties:
                lang:
                  type: string
                  description: >-
                    The official language code (e.g., en, de, fr) used for
                    localization
                code:
                  type: string
                  description: >-
                    The custom language identifier defined in the Space Settings
                    under Internationalization
                overwrite:
                  type: boolean
                  description: >-
                    Indicates whether the current value should replace the
                    existing value for the specified language
                release_id:
                  type: integer
                  description: Release ID of the story
      responses:
        '200':
          description: Story translated
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
                    description: >-
                      A single story object, containing the translated fields in
                      its content property
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/story_versions:
    get:
      operationId: getStoryVersions
      summary: Get Story Versions (New)
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: by_story_id
          in: query
          required: false
          schema:
            type: integer
          description: >-
            ID of the story. When this is passed, the endpoint returns versions
            of this particular story
        - name: version_id
          in: query
          required: false
          schema:
            type: integer
          description: >-
            ID of a Story's version. Use it to retrieve only a specific version
            of a story
        - name: by_release_id
          in: query
          required: false
          schema:
            type: integer
          description: >-
            ID of the release. When this is passed, the endpoint returns
            versions of all stories within the release and stories not
            associated with a particular release
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 100
        - name: show_content
          in: query
          required: false
          schema:
            type: string
          description: Use it to retrieve all the content of a version
      responses:
        '200':
          description: Story versions
          content:
            application/json:
              schema:
                type: object
                properties:
                  story_versions:
                    type: array
                    description: >-
                      An array of objects with each object representing a
                      version and details about the version
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                          description: Numeric id of the story version
                        created_at:
                          type: string
                          format: date-time
                          description: Creation date
                        user_id:
                          type: integer
                          description: User/numeric id of collaborator
                        user:
                          type: object
                          description: Name of the author
                          properties:
                            id:
                              type: integer
                              description: The user ID
                            firstname:
                              type: string
                              description: First name of collaborator
                            lastname:
                              type: string
                              description: Last name of collaborator
                            alt_email:
                              type: string
                              description: Email of collaborator
                            avatar:
                              type: string
                              description: Avatar of collaborator usually an image
                            userid:
                              type: string
                              description: User ID of collaborator
                            friendly_name:
                              type: string
                              description: Friendly name of collaborator
                        story_id:
                          type: integer
                          description: ID of the story
                        status:
                          type: string
                          description: Publication status of the version
                        release_id:
                          type: integer
                          description: ID of the release
                        parent_id:
                          type: integer
                          description: ID of the parent folder
                        content:
                          type: object
                          description: >-
                            This object contains the Story's content when the
                            show_content parameter is used
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/restore_with:
    get:
      operationId: restoreStoryVersion
      summary: Restore a Story Version
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: versions_v2
          in: query
          required: true
          schema:
            type: boolean
          description: >-
            When set to true, the version passed is treated as a new story
            version, while setting it to false treats it as a legacy version.
            Read the note on the get story versions endpoint to learn how to
            differentiate between new and legacy versions
        - name: version
          in: query
          required: true
          schema:
            type: string
          description: The ID of the story version
      responses:
        '200':
          description: Story version restored
          content:
            application/json:
              schema:
                type: object
                properties:
                  story:
                    $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story or version not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/{story_id}/compare:
    get:
      operationId: compareStoryVersion
      summary: Compare a Story Version
      description: >-
        Compare the changes between two versions of a story in Storyblok. You
        need to provide the story `ID` and version `ID` in the request to
        retrieve the comparison results.
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/story_id'
        - name: version
          in: query
          required: true
          schema:
            type: integer
          description: Story version id
      responses:
        '200':
          description: Version comparison
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StoryVersionComparison'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Story not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/stories/unpublished_dependencies:
    post:
      operationId: getUnpublishedDependencies
      summary: Get Unpublished Dependencies
      parameters:
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - story_ids
              properties:
                story_ids:
                  type: array
                  items:
                    type: integer
                  description: List of story IDs
                release_id:
                  type: integer
                  description: >-
                    ID of a release. If this is passed, the endpoint looks for
                    unpublished dependencies in this specific release.
      responses:
        '200':
          description: Unpublished dependencies
          content:
            application/json:
              schema:
                type: object
                properties:
                  unpublished_stories:
                    type: array
                    items:
                      $ref: '#/components/schemas/story'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
      tags:
        - stories_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/components:
    description: >-
      A component is a standalone entity that is meaningful in its own right.
      While components (or bloks) can be nested in each other, semantically they
      remain equal. Each component is a small piece of your data structure which
      can be filled with content. One component can consist of as many field
      types as required. The components endpoint allows you to retrieve, add,
      update, or delete components.
    get:
      operationId: getComponents
      summary: Retrieve Multiple Components
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: by_ids
          in: query
          required: false
          schema:
            type: string
          description: Filter by ids (comma separated)
        - name: sort_by
          in: query
          required: false
          schema:
            type: string
          description: >-
            Components can be sorted in an ascending or descending order by a
            specific property
        - name: is_root
          in: query
          required: false
          schema:
            type: boolean
          description: Retrieve all the components based on is_root property of a component
        - name: search
          in: query
          required: false
          schema:
            type: string
          description: Search by name or display_name
        - name: in_group
          in: query
          required: false
          schema:
            type: string
          description: >-
            Find components that are present in a specific group with the UUID
            of the group
      responses:
        '200':
          description: List of components
          content:
            application/json:
              schema:
                type: object
                properties:
                  components:
                    type: array
                    items:
                      $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    post:
      operationId: createComponent
      summary: Create a Component
      parameters:
        - $ref: '#/components/parameters/space_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component:
                  $ref: '#/components/schemas/component'
      responses:
        '201':
          description: Component created
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Space not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/components/{component_id}:
    description: >-
      Manage a specific component by its ID. Retrieve, update, or delete
      individual components and their configurations.
    get:
      operationId: getComponent
      summary: Retrieve One Component
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/component_id'
      responses:
        '200':
          description: Component details
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    put:
      operationId: updateComponent
      summary: Update a Component
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/component_id'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                component:
                  $ref: '#/components/schemas/component'
      responses:
        '200':
          description: Component updated
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
    delete:
      operationId: deleteComponent
      summary: Delete a Component
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/component_id'
      responses:
        '200':
          description: Component deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/versions:
    description: Retrieve component versions. This endpoint's response is paginated.
    get:
      operationId: getComponentVersions
      summary: Retrieve Component Versions
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
          description: Page number
        - name: per_page
          in: query
          required: false
          schema:
            type: integer
            default: 25
            maximum: 100
          description: Number of versions per page
        - name: model
          in: query
          required: false
          schema:
            type: string
        - name: model_id
          in: query
          required: false
          schema:
            type: string
          description: Component ID
      responses:
        '200':
          description: Component versions
          content:
            application/json:
              schema:
                type: object
                properties:
                  versions:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: integer
                        event:
                          type: string
                        created_at:
                          type: string
                        author_id:
                          type: integer
                        item_id:
                          type: integer
                        author:
                          type: string
                        is_draft:
                          type: boolean
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/components/{component_id}/component_versions/{version_id}:
    description: Retrieve schema details of a component version.
    get:
      operationId: getComponentVersion
      summary: Retrieve a Single Component Version
      parameters:
        - $ref: '#/components/parameters/space_id'
        - $ref: '#/components/parameters/component_id'
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: Version ID of the component
      responses:
        '200':
          description: Component version details
          content:
            application/json:
              schema:
                type: object
                properties:
                  component_version:
                    type: object
                    properties:
                      schema:
                        type: object
                        additionalProperties: true
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component or version not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
  /v1/spaces/{space_id}/versions/{version_id}:
    description: Restore a component to a saved version.
    put:
      operationId: restoreComponentVersion
      summary: Restore a Component Version
      parameters:
        - $ref: '#/components/parameters/space_id'
        - name: version_id
          in: path
          required: true
          schema:
            type: integer
          description: ID of the component version
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                model:
                  type: string
                model_id:
                  type: string
      responses:
        '200':
          description: Component version restored
          content:
            application/json:
              schema:
                type: object
                properties:
                  component:
                    $ref: '#/components/schemas/component'
        '400':
          description: Bad request
        '401':
          description: Unauthorized
        '404':
          description: Component or version not found
      tags:
        - components_other
      security:
        - PersonalAccessToken: []
        - BearerAuth: []
components:
  securitySchemes:
    PersonalAccessToken:
      type: apiKey
      in: header
      name: Authorization
      description: >
        ## Personal Access Token Authentication


        A **Personal Access Token** is obtained from the Storyblok UI and grants
        access to all spaces associated with your account.


        **Key Characteristics:**

        - Not tied to a single space - allows actions based on your permissions
        in all accessible spaces

        - Used without "Bearer" keyword in the Authorization header

        - Generated from Storyblok Account settings

        - No expiration - valid until revoked


        **Usage:** `Authorization: YOUR_PERSONAL_ACCESS_TOKEN`


        📖 **[View detailed documentation
        →](/authentication/personal-access-token)**


        🔗 **Official Docs:** [Authentication
        Guide](https://www.storyblok.com/docs/api/management/getting-started/authentication)
    BearerAuth:
      type: http
      scheme: bearer
      description: >
        ## OAuth Access Token Authentication


        An **OAuth Access Token** is obtained via the OAuth2 authentication flow
        and is tied to a single space.


        **Key Characteristics:**

        - Time-to-live (TTL) - tokens expire after a set period

        - Single space access - tied to specific space permissions

        - Used with "Bearer" keyword in the Authorization header

        - Scoped permissions - granted during OAuth process


        **Usage:** `Authorization: Bearer YOUR_OAUTH_ACCESS_TOKEN`


        📖 **[View detailed documentation
        →](/authentication/oauth-access-token)**


        🔗 **Official Docs:** [OAuth2 Authentication
        Guide](https://www.storyblok.com/docs/api/management/getting-started/oauth2-authentication) 
  schemas:
    Story:
      $ref: '#/components/schemas/story'
    StoryCreateRequest:
      $ref: '#/components/schemas/story-create-request'
    StoryUpdateRequest:
      $ref: '#/components/schemas/story-update-request'
    StoryDuplicateRequest:
      type: object
      description: Request body for duplicating a story
      properties:
        story:
          allOf:
            - $ref: '#/components/schemas/story'
            - type: object
              description: >-
                Any attributes sent here will be copied to the duplicated story.
                To link duplicated stories as alternates, specify a group_id in
                the story object.
        target_dimension:
          type: integer
          description: The id of the target folder
        same_path:
          type: boolean
          description: >-
            If set to true, the current story's path attribute will used for the
            duplicated story
    StoryImportRequest:
      type: object
      description: Request body for importing a story
      properties:
        story:
          type: object
          description: The story object to import
          properties:
            name:
              type: string
              description: Name of the story
            slug:
              type: string
              description: Slug of the story
            content:
              type: object
              description: Content of the story
            parent_id:
              type: integer
              description: Parent folder ID
        publish:
          type: boolean
          description: Whether to publish the imported story
    StoryTranslateRequest:
      type: object
      description: Request body for AI translation
      properties:
        target_language:
          type: string
          description: Target language code for translation
        fields:
          type: array
          description: Array of field names to translate
          items:
            type: string
    StoryVersion:
      $ref: '#/components/schemas/story-version'
    StoryVersionComparison:
      type: object
      description: Comparison between two story versions
      properties:
        from_version:
          type: integer
          description: Source version ID
        to_version:
          type: integer
          description: Target version ID
        changes:
          type: object
          description: Changes between versions
          properties:
            added:
              type: array
              description: Added fields
              items:
                type: string
            removed:
              type: array
              description: Removed fields
              items:
                type: string
            modified:
              type: array
              description: Modified fields
              items:
                type: string
    UnpublishedStory:
      $ref: '#/components/schemas/story'
    story:
      type: object
      description: A Storyblok story object representing a content entry
      properties:
        id:
          type: integer
          description: Numeric id of the story
          readOnly: true
        name:
          type: string
          description: The complete name provided for the story
        parent_id:
          type: integer
          description: ID of the parent folder
        group_id:
          type: string
          format: uuid
          description: Group ID (UUID string), shared between stories defined as alternates
        alternates:
          type: array
          description: >-
            An array containing objects that provide basic data of the stories
            defined as alternates of the current story
          items:
            type: object
            properties:
              id:
                type: integer
                description: The numeric ID
              name:
                type: string
                description: The complete name provided for the story
              slug:
                type: string
                description: The slug specific for the story
              published:
                type: boolean
                description: >-
                  true if a story is currently published, even if it has
                  unpublished changes
              full_slug:
                type: string
                description: >-
                  The full slug of the story, combining the parent folder(s) and
                  the designated story slug
              is_folder:
                type: boolean
                description: true if the instance constitutes a folder
        created_at:
          type: string
          format: date-time
          description: Creation date yyyy-MM-dd'T'HH:mm:ssZ
        deleted_at:
          type: string
          format: date-time
          nullable: true
          description: Deleted date YYYY-mm-dd HH:MM
        sort_by_date:
          type: string
          format: date
          nullable: true
          description: Date defined in the story's entry configuration YYYY-mm-dd
        tag_list:
          type: array
          description: Array of tag names
          items:
            type: string
        updated_at:
          type: string
          format: date-time
          description: Latest update date yyyy-MM-dd'T'HH:mm:ssZ
        published_at:
          type: string
          format: date-time
          description: Latest publishing date yyyy-MM-dd'T'HH:mm:ssZ
        uuid:
          type: string
          format: uuid
          description: Generated UUID string
          readOnly: true
        is_folder:
          type: boolean
          description: true if the instance constitutes a folder
        content:
          type: object
          description: >-
            An object containing the field data associated with the specific
            story type's specific content structure. Also includes a component
            property with the story type's technical name.
          properties:
            _uid:
              type: string
              format: uuid
              description: Unique identifier for the content
            component:
              type: string
              description: The story type's technical name
          additionalProperties: true
        published:
          type: boolean
          description: >-
            true if a story is currently published, even if it has unpublished
            changes
        slug:
          type: string
          description: The slug specific for the story
        path:
          type: string
          nullable: true
          description: >-
            Value of the real path defined in the story's entry configuration
            (usually, this value is only required for Storyblok's Visual Editor)
        full_slug:
          type: string
          description: >-
            The full slug of the story, combining the parent folder(s) and the
            designated story slug
        default_root:
          type: string
          nullable: true
          description: >-
            Component name which will be used as default content type for this
            folders entries
        disable_fe_editor:
          type: boolean
          description: Is side by side editor disabled for all entries in folder
        parent:
          type: object
          description: Essential parent information as object (resolved from parent_id)
          additionalProperties: true
        is_startpage:
          type: boolean
          description: true if the story is defined as root for the folder
        unpublished_changes:
          type: boolean
          description: Story has unpublished changes; saved but not published
        meta_data:
          type: object
          nullable: true
          description: >-
            Object to store non-editable data that is exclusively maintained
            with the Management API
        imported_at:
          type: string
          format: date-time
          nullable: true
          description: Latest import date YYYY-mm-dd HH:MM
        preview_token:
          type: object
          description: Preview token
          properties:
            token:
              type: string
              description: >-
                The token passed to the editor as preview parameter to allow
                edit mode verification
            timestamp:
              type: string
              description: >-
                Timestamp passed to the editor as preview parameter to allow
                edit mode verification
        pinned:
          type: boolean
          description: To pin the story in the toolbar
        breadcrumbs:
          type: array
          description: >-
            Array of resolved subset of link objects (one per path segment /
            parent)
          items:
            type: object
            properties:
              id:
                type: integer
                description: Story ID
              name:
                type: string
                description: The complete name provided for the story
              parent_id:
                type: integer
                description: ID of the parent folder
              disable_fe_editor:
                type: boolean
                description: Is side by side editor disabled for all entries in folder
              path:
                type: string
                description: >-
                  Value of the real path defined in the story's entry
                  configuration
              slug:
                type: string
                description: The slug specific for the story
              translated_slugs:
                type: array
                description: >-
                  Array of translated slug objects (if the app Translatable
                  Slugs is installed)
                items:
                  type: object
                  properties:
                    story_id:
                      type: integer
                      description: ID of the story
                    lang:
                      type: string
                      description: Language code of the current language
                    slug:
                      type: string
                      description: The slug specific for the story
                    name:
                      type: string
                      description: The complete name provided for the story
                    published:
                      type: boolean
                      description: >-
                        true if a story is currently published, even if it has
                        unpublished changes
        first_published_at:
          type: string
          format: date-time
          description: First publishing date yyyy-MM-dd'T'HH:mm:ssZ
        last_author:
          type: object
          description: Last author
          properties:
            id:
              type: integer
              description: Last author user object numeric id
            userid:
              type: string
              description: Last author userid/username
            friendly_name:
              type: string
              description: Friendly name of last author
        last_author_id:
          type: integer
          description: Id of the last Author
        translated_slugs:
          type: array
          description: >-
            Array of translated slug objects (if the app Translatable Slugs is
            installed)
          items:
            type: object
            properties:
              story_id:
                type: integer
                description: ID of the story
              lang:
                type: string
                description: Language code of the current language
              slug:
                type: string
                description: The slug specific for the story
              name:
                type: string
                description: The complete name provided for the story
              published:
                type: boolean
                description: >-
                  true if a story is currently published, even if it has
                  unpublished changes
        translated_slugs_attributes:
          type: array
          description: >-
            Array of translated slug attributes objects (if the app Translatable
            Slugs is installed) to change translated slugs when creating or
            updating a story
          items:
            type: object
            properties:
              id:
                type: integer
                description: The numeric ID
              lang:
                type: string
                description: Language code of the current language
              slug:
                type: string
                description: The slug specific for the story
              name:
                type: string
                description: The complete name provided for the story
              published:
                type: boolean
                description: >-
                  true if a story is currently published, even if it has
                  unpublished changes
        localized_paths:
          type: array
          description: An array of translated path objects
          items:
            type: object
            properties:
              path:
                type: string
                description: >-
                  Value of the real path defined in the story's entry
                  configuration
              name:
                type: string
                description: The complete name provided for the story
              lang:
                type: string
                description: Language code of the current language
              published:
                type: boolean
                description: >-
                  true if a story is currently published, even if it has
                  unpublished changes
        position:
          type: integer
          description: Numeric representation of the story's position in the folder
        release_id:
          type: integer
          description: >-
            ID of the current release (can be requested with the from_release
            API parameter)
        scheduled_dates:
          type: string
          format: date-time
          description: Scheduled publishing date YYYY-mm-dd HH:MM
        favourite_for_user_ids:
          type: array
          description: Array of user IDs who have added the story in their favorites
          items:
            type: integer
    story-create-request:
      type: object
      required:
        - story
      properties:
        story:
          required:
            - name
            - slug
          allOf:
            - $ref: '#/components/schemas/story'
            - type: object
        publish:
          type: integer
          description: Should the story be published immediately (set 1 to publish)
        release_id:
          type: integer
          description: >-
            ID of the current release (can be requested with the from_release
            API parameter)
    story-update-request:
      type: object
      required:
        - story
      properties:
        story:
          allOf:
            - $ref: '#/components/schemas/story'
            - type: object
              required:
                - name
                - slug
        group_id:
          type: string
          description: Group ID (UUID string), shared between stories defined as alternates
        force_update:
          type: string
          enum:
            - 0
            - 1
          default: 0
          description: >-
            If this is 1, the request can overwrite a locked story. Note that a
            user currently editing the story (which is why it was locked) will
            encounter a content conflict model. Importantly, note that
            force_update does not work when editing is locked for the workflow
            stage that the story currently is in
        release_id:
          type: integer
          description: Numeric ID of release (optional)
        publish:
          type: integer
          description: Should the story be published immediately (set 1 to publish)
        lang:
          type: string
          description: >-
            Language code to publish the story individually (must be enabled in
            the space settings)
    story-version:
      type: object
      description: A story version object
      properties:
        id:
          type: integer
          description: Version ID
        name:
          type: string
          description: Version name
        created_at:
          type: string
          format: date-time
          description: Version creation date
        created_by:
          type: object
          description: User who created the version
          properties:
            id:
              type: integer
              description: User ID
            name:
              type: string
              description: User name
        story:
          $ref: '#/components/schemas/story'
    Component:
      $ref: '#/components/schemas/component'
      type: object
      description: Request body for creating or updating a component
      properties:
        component:
          type: object
          description: Component configuration
          properties:
            name:
              type: string
              description: Technical name of the component
            display_name:
              type: string
              description: Human-readable display name
            schema:
              type: object
              description: Component schema definition
              properties:
                _uid:
                  type: object
                  description: Unique identifier field configuration
                component:
                  type: object
                  description: Component type field configuration
                field_name:
                  type: object
                  description: Dynamic field configurations
            is_root:
              type: boolean
              description: Whether the component can be used as a root component
            is_nestable:
              type: boolean
              description: Whether the component can be nested within other components
            image:
              type: object
              description: Component image/icon
              properties:
                id:
                  type: integer
                  description: Image ID
                alt:
                  type: string
                  description: Image alt text
                name:
                  type: string
                  description: Image name
                focus:
                  type: string
                  description: Image focus point
                title:
                  type: string
                  description: Image title
                filename:
                  type: string
                  description: Image filename
                copyright:
                  type: string
                  description: Image copyright
                fieldtype:
                  type: string
                  description: Image field type
            preview_tmpl:
              type: string
              description: Preview template for the component
            is_sortable:
              type: boolean
              description: Whether the component is sortable
            initial_status:
              type: string
              description: Initial status of the component
            expandable:
              type: boolean
              description: Whether the component is expandable
            color:
              type: string
              description: Component color
            icon:
              type: string
              description: Component icon
            strict:
              type: boolean
              description: Whether the component has strict validation
            tabs:
              type: array
              description: Component tabs configuration
              items:
                type: object
                properties:
                  name:
                    type: string
                    description: Tab name
                  label:
                    type: string
                    description: Tab label
                  hidden:
                    type: boolean
                    description: Whether the tab is hidden
            can_edit:
              type: boolean
              description: Whether the component can be edited
            default_root:
              type: string
              description: Default root component name
            default_content:
              type: object
              description: Default content for the component
    ComponentVersion:
      type: object
      description: A component version object
      properties:
        schema:
          additionalProperties: true
    ComponentSchemaField:
      type: object
      description: A component schema field object
      properties:
        type:
          type: string
          description: Field type (text, textarea, number, boolean, etc.)
        pos:
          type: integer
          description: Position of the field
        display_name:
          type: string
          description: Human-readable display name
        required:
          type: boolean
          description: Whether the field is required
        regex:
          type: string
          description: Regular expression for validation
        translatable:
          type: boolean
          description: Whether the field is translatable
        description:
          type: string
          description: Field description
        default_value:
          type: string
          description: Default value for the field
        options:
          type: array
          description: >-
            Array of datasource entries [{name:"", value:""}]; Effects editor
            only if source=undefined. For field type option.
          items:
            type: object
            properties:
              _uid:
                type: string
              name:
                type: string
              value:
                type: string
        source:
          type: string
          enum:
            - option
            - options
            - custom
        folder_slug:
          type: string
          description: Folder slug for asset fields
        filetypes:
          type: array
          description: Allowed file types for asset fields
          items:
            type: string
        maximum:
          type: number
          description: Maximum value for number fields
        minimum:
          type: number
          description: Minimum value for number fields
        maxlength:
          type: integer
          description: Maximum length for text fields
        minlength:
          type: integer
          description: Minimum length for text fields
        rich_markdown:
          type: boolean
          description: Whether rich markdown is enabled
        rich_text:
          type: boolean
          description: Whether rich text is enabled
        markdown:
          type: boolean
          description: Whether markdown is enabled
        size:
          type: string
          description: Field size (small, medium, large)
        height:
          type: integer
          description: Field height in pixels
        width:
          type: integer
          description: Field width in pixels
        use_uuid:
          type: boolean
          description: Whether to use UUID for the field
        restrict_content_types:
          type: boolean
          description: Whether to restrict content types
        restrict_components:
          type: boolean
          description: Whether to restrict components
        component_whitelist:
          type: array
          description: List of allowed components
          items:
            type: string
        component_group_whitelist:
          type: array
          description: List of allowed component groups
          items:
            type: string
        maximum_entries:
          type: integer
          description: Maximum number of entries
        minimum_entries:
          type: integer
          description: Minimum number of entries
        restrict_assets:
          type: boolean
          description: Whether to restrict assets
        asset_whitelist:
          type: array
          description: List of allowed asset types
          items:
            type: string
        exclude_empty_option:
          type: boolean
          description: Whether to exclude empty option
        include_empty_option:
          type: boolean
          description: Whether to include empty option
        datasource_slug:
          type: string
          description: Datasource slug for datasource fields
        multiple:
          type: boolean
          description: Whether multiple values are allowed
        custom_css:
          type: string
          description: Custom CSS for the field
        custom_js:
          type: string
          description: Custom JavaScript for the field
        api_connection:
          type: object
          description: API connection configuration
          properties:
            url:
              type: string
              description: API URL
            headers:
              type: object
              description: API headers
            params:
              type: object
              description: API parameters
        fieldset:
          type: object
          description: Fieldset configuration
          properties:
            title:
              type: string
              description: Fieldset title
            description:
              type: string
              description: Fieldset description
            collapsible:
              type: boolean
              description: Whether the fieldset is collapsible
            collapsed:
              type: boolean
              description: Whether the fieldset is collapsed by default
    component:
      type: object
      description: A Storyblok component object representing a content type
      properties:
        id:
          readOnly: true
          type: integer
          description: The numeric ID
        name:
          type: string
          description: Technical name used for component property in entries
        display_name:
          type: string
          nullable: true
          description: Name that will be used in the editor interface
        created_at:
          type: string
          format: date-time
          description: Creation date
        updated_at:
          type: string
          format: date-time
          description: Latest update date
        schema:
          type: object
          description: >-
            Component schema definition containing fields and their
            configurations
          properties:
            _uid:
              type: object
              description: Unique identifier field configuration
            component:
              type: object
              description: Component type field configuration
          additionalProperties: true
        image:
          type: string
          nullable: true
          description: URL to the preview image
        preview_field:
          type: string
          description: The field that is for preview in the interface (Preview Field)
        is_root:
          type: boolean
          description: Whether the component can be used as a root component
        preview_tmpl:
          type: string
          nullable: true
          description: Preview template for the component
        is_nestable:
          type: boolean
          description: True if the component is nestable (insertable) in block field types
        all_presets:
          type: array
          description: An array of presets for this component
          items:
            type: object
            properties:
              id:
                type: integer
                description: The numeric ID of the preset
              name:
                type: string
                description: Name of the preset
              component_id:
                type: number
                description: The ID of the component the preset is for
              image:
                type: string
                nullable: true
                description: Link to the preview image of the preset
              icon:
                type: string
                description: Icon selected for the preset
              color:
                type: string
                description: Color of the icon selected for the preset
              description:
                type: string
                description: The description of the preset
        preset_id:
          type: integer
          nullable: true
          description: ID of the preset currently selected for this component
        real_name:
          type: string
          description: Duplicated technical name or display name, used for internal tasks
        component_group_uuid:
          type: string
          format: uuid
          description: The component folder ID of the component
        color:
          type: string
          description: The color of the icon selected for the component
        icon:
          type: string
          description: Icon selected for the component
        internal_tags_list:
          type: array
          description: List of internal tags assigned to the component
          items:
            type: object
            properties:
              id:
                type: number
                description: Tag ID
              name:
                type: string
                description: Tag name
        internal_tag_ids:
          type: array
          description: List of IDs of the tags assigned to the component
          items:
            type: string
        content_type_asset_preview:
          type: string
          description: Asset preview field (Preview Card) for a content type component
  parameters:
    space_id:
      name: space_id
      in: path
      required: true
      schema:
        type: integer
      description: The ID of the Storyblok space.
    story_id:
      name: story_id
      in: path
      required: true
      schema:
        type: integer
      description: The numeric id of story
    component_id:
      name: component_id
      in: path
      required: true
      schema:
        type: integer
      description: Numeric id of a component
x-tagGroups:
  - name: Storyblok Stories API
    tags:
      - stories_other
  - name: Storyblok Components API
    tags:
      - components_other
