---
import options from 'virtual:storyblok-options';
import { toCamelCase, type SbBlokData } from '@storyblok/astro';
import type { AstroComponentFactory } from 'astro/runtime/server/index.js';
import { storyblokComponents } from 'virtual:import-storyblok-components';

export interface Props {
  blok: SbBlokData;
  [prop: string]: unknown;
}
const { blok, ...props } = Astro.props;

if (!blok) {
  throw new Error(
    "Cannot render StoryblokComponent. 'blok' prop is undefined."
  );
}
/**
 * convert blok components to camel case to match vite-plugin-import-storyblok-components
 */
let key = toCamelCase(blok.component as string);

const componentFound: boolean = key in storyblokComponents;

let Component: AstroComponentFactory;

if (!componentFound) {
  if (!options.enableFallbackComponent)
    throw new Error(
      `No component found for blok "${blok.component}". 
      Make sure the component is:
      • Registered in your astro.config.mjs, or
      • Placed in the "/${options.componentsDir}/storyblok" folder, or
      • Enable the "fallbackComponent" option to handle missing components.`
    );
  else {
    Component = storyblokComponents['FallbackComponent'];
  }
} else {
  Component = storyblokComponents[key];
}
---

<Component blok={blok} {...props} />
